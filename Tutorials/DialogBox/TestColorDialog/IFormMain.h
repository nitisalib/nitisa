// This file was generated by Form Builder from Nitisa C++ GUI framework
// Framework site: http://nitisa.com
// Framework download: http://nitisa.com/downloads
// Framework documentation: http://nitisa.com/documentation
// Framework license: http://nitisa.com/site/license
// Form Builder version: 13.0.0
// Form Builder documentation: http://nitisa.com/guide/form-builder
// Generated: 2022-04-17 14:20:03

// !!! ATTENTION !!!
// This is an auto-generated file with form declaration and initialization.
// Include it into your form class header file and derive your form from the class implemented here.
// Add constructor and implement event processing methods(if exist) from "protected" section.
// For example:
//     FormMain.h:
//         #include "IFormMain.h" // Include this file
//
//         namespace nitisa
//         {
//             class IControl;
//
//             namespace app
//             {
//                 class CFormMain : public IFormMain // Derive your form from class from this file
//                 {
//                 protected: // Declare overridden methods handling events if there ones in this class
//                     void ButtonAdd_OnClick(IControl *sender) override;
//                 public:
//                     CFormMain(); // Declare constructor
//                 };
//             }
//         }
//
//     FormMain.cpp:
//         #include "Standard/Platform/Windows/Window.h" // Include required platform window management class
//         #include "Standard/Platform/Windows/OpenGL/Renderer.h" // Include required renderer
//         #include "FormMain.h" // Include header class of your form
//
//         namespace nitisa
//         {
//             namespace app
//             {
//                 CFormMain::CFormMain(): // Implement constructor of your form
//                     IFormMain(new standard::windows::CWindow(), new standard::windows::opengl::CRenderer(false, 0))
//                 {
//                     // Insert your code here
//                 }
//
//                 void CFormMain::ButtonAdd_OnClick(IControl *sender) // Implement event processing methods
//                 {
//                     // Insert your code here
//                 }
//             }
//         }


#pragma once

#include "Nitisa/Core/Form.h"
#include "Nitisa/Core/LockRepaint.h"
#include "Nitisa/Core/RotateOrder.h"
#include "Nitisa/Core/Strings.h"
#include "Nitisa/Core/TransformOrder.h"
#include "Nitisa/Core/Utils.h"
#include "Nitisa/Interfaces/IApplication.h"
#include "Nitisa/Interfaces/IApplicationService.h"
#include "Nitisa/Interfaces/IFormService.h"
#include "Nitisa/Interfaces/ITransform.h"
#include "Nitisa/Math/Point.h"
#include "Nitisa/Math/PointF.h"
#include "Nitisa/Math/Transform.h"
#include "Standard/Components/ColorDialog/ColorDialog.h"
#include "Standard/Controls/Button/Button.h"
#include "Standard/Controls/Panel/Panel.h"

namespace nitisa
{
	class IControl;
	class IRenderer;
	class IWindow;
	struct CreateParams;

	namespace app
	{
		class IFormMain : public CForm
		{
		protected:
			// Components
			standard::CColorDialog *m_pColorDialog1;

			// Controls
			standard::CButton *m_pButton1;
			standard::CPanel *m_pPanel1;

		protected:
			// Events(Should be implemented in derived widget)
			virtual void Button1_OnClick(IControl *sender) = 0;

		private:
			void Initialize()
			{
				// Create components
				m_pColorDialog1 = new standard::CColorDialog(this);
				m_pColorDialog1->setName(L"ColorDialog1");

				// Create controls
				m_pButton1 = new standard::CButton(this);
				m_pButton1->setName(L"Button1");
				m_pPanel1 = new standard::CPanel(this);
				m_pPanel1->setName(L"Panel1");

				// Initialize components
				m_pColorDialog1->setName(L"ColorDialog1");
				m_pColorDialog1->setUseDialogBox(true);

				// Initialize controls
				m_pButton1->setName(L"Button1");
				m_pButton1->getTransform()->Translate(10.0f, 10.0f, 0.0f);
				m_pButton1->setSize(PointF{ 174.0f, 43.0f });
				m_pButton1->setTabOrder(1);
				m_pButton1->setCaption(UTF8ToString("Select color..."));
				m_pButton1->OnClick = [](IControl *sender)->void { cast<IFormMain*>(sender->getForm())->Button1_OnClick(sender); };

				m_pPanel1->setName(L"Panel1");
				m_pPanel1->getTransform()->Translate(10.0f, 60.0f, 0.0f);
				m_pPanel1->setSize(PointF{ 175.0f, 115.0f });
				m_pPanel1->setCaption(UTF8ToString(""));


			}

		public:
			IFormMain(IWindow *window, IRenderer *renderer, const String &class_name = L"FormMain", const CreateParams *params = nullptr) :
				CForm(class_name, nullptr, renderer, params),
				m_pColorDialog1{ nullptr },
				m_pButton1{ nullptr },
				m_pPanel1{ nullptr }
			{
				if (window)
				{
					CLockRepaint lock(this);
					setName(L"FormMain");
					setClientSize(Point{ 640, 480 });
					QueryService()->setWindow(window);
					Application->QueryService()->Add(this);
					Initialize();
					Repaint(Rect{ 0, 0, 0, 0 }, true);
				}
			}
		};
	}
}
