#pragma once

// Include file with form prototype which was generated by Form Builder when we saved the form
#include "IFormMain.h"

// As we develop with Nitisa framework we can simply put everything into this namespace to avoid adding it everywhere or adding "using namespace nitisa"
namespace nitisa
{
	// By default Form Builder generate form prototype class in this namespace. So we put our form final class inside it as well
	namespace app
	{
		// This is our form class which should be derived from the form prototype class generated when we saved the form in Form Builder
		class CFormMain :public IFormMain
		{
		private:
			// This small class implements listener to be used to get notification about accepting color selection by a user
			// Class should implement IColorDialogListener interface, so it should be derived from it
			class CColorDialogListener :public virtual standard::IColorDialogListener
			{
			private:
				// In this member will be stored a pointer to our form
				CFormMain *m_pForm;
			public:
				// Listener has only one method which will be called when user accepts color selection and we will use it to update panel's color
				void OnApply(standard::IColorDialog *sender) override;

				// Constructor
				CColorDialogListener(CFormMain *form);
			};
		private:
			// Our listener
			CColorDialogListener m_cColorDialogListener;
			// Flag telling whether we need or not to adjust dialog box size and position. We want to do it only once
			bool m_bDialogBoxAdjusted;
		protected:
			// Here are the methods which will be called when different events will happen. We added one when double clicked on button's "OnClick" event.
			// If your form has many events it is easy to forget about some of them. We recommend just open form prototype header file, find there "protected" section, and see all the methods you need.
			void Button1_OnClick(IControl *sender) override;
		public:
			// Form's constructor
			CFormMain();
		};

		// Variable where we will store form instance
		extern CFormMain *FormMain;
	}
}