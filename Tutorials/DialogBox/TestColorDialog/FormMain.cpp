// Include header file with platform window management class
#include "Platform/Core/Window.h"

// Include header file with platform OpenGL renderer
#include "Platform/Core/Renderer.h"

// Color dialog box is declared here
#include "Standard/Forms/Color/DialogBoxColor.h"

// Include declaration of our form
#include "FormMain.h"

namespace nitisa
{
	namespace app
	{
		// Global variable for the form instance
		CFormMain *FormMain{ nullptr };

		// In constructor we just store pointer to a form
		CFormMain::CColorDialogListener::CColorDialogListener(CFormMain *form) :
			m_pForm{ form }
		{

		}

		// When color selection is confirmed we update panel color
		void CFormMain::CColorDialogListener::OnApply(standard::IColorDialog *sender)
		{
			m_pForm->m_pPanel1->setBackgroundColor(m_pForm->m_pColorDialog1->getColor());
		}

		// Form constructor
		CFormMain::CFormMain() :
			// Calling of parent class constructor. It should be supplied with platform window and renderer objects
			IFormMain(CWindow::Create(), CRenderer::Create()),
			// Create listener sending pointer to the form to it
			m_cColorDialogListener{ this },
			// Initially dialog box size and position where not adjusted yet
			m_bDialogBoxAdjusted{ false }
		{
			// We need not to do anything here
			// All the initialization and UI creation is done in the parent IFormMain class generated by the Form Builder

			// Assign listener to ColorDialog
			m_pColorDialog1->setColorDialogListener(&m_cColorDialogListener);
		}

		// Method called when user clicks on button
		void CFormMain::Button1_OnClick(IControl *sender)
		{
			// Show color selection interface and adjust dialog box if required and dialog box mode is on
			if (m_pColorDialog1->Execute() && m_pColorDialog1->isUseDialogBox() && !m_bDialogBoxAdjusted)
			{
				// Set background color of the dialog box to the color our form has
				m_pColorDialog1->getDialogBox()->setBackgroundColor(getBackgroundColor());
				// Automatically adjust dialog box size and position
				m_pColorDialog1->getDialogBox()->AutoResize(true);
				// Set flag so we do not adjust dialog box size and position each time when color selection interface is being shown
				m_bDialogBoxAdjusted = true;
			}
		}
	}
}