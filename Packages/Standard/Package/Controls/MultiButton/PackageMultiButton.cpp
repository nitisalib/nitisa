// This file is a part of Nitisa framework
// Copyright © 2021 Nitisa. All rights reserved.
// Author: Dimitry Lysenko
// Site: http://nitisa.com
// Download: http://nitisa.com/downloads
// Documentation: http://nitisa.com/documentation
// License: http://nitisa.com/site/license

#include "stdafx.h"

namespace nitisa
{
	namespace standard
	{
		const int IconWidth{ 26 }, IconHeight{ 26 };
		const Color IconData[26 * 26]{
			{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },{ 255, 255, 255, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 173, 213, 172, 255 },{ 109, 188, 108, 255 },{ 86, 178, 84, 255 },{ 77, 174, 74, 255 },{ 75, 173, 73, 255 },{ 86, 178, 84, 255 },{ 111, 188, 109, 255 },{ 179, 216, 178, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 138, 199, 137, 255 },{ 74, 174, 73, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 74, 173, 72, 255 },{ 200, 224, 200, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 235, 130, 130, 255 },{ 236, 143, 143, 255 },{ 239, 237, 237, 255 },{ 229, 235, 229, 255 },{ 122, 193, 120, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 139, 199, 138, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 235, 125, 125, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 63, 63, 255 },{ 237, 199, 199, 255 },{ 240, 240, 240, 255 },{ 224, 233, 223, 255 },{ 79, 175, 78, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 138, 200, 137, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 238, 196, 196, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 234, 91, 91, 255 },{ 239, 220, 220, 255 },{ 240, 240, 240, 255 },{ 177, 214, 177, 255 },{ 80, 175, 78, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 202, 224, 201, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 233, 58, 58, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 236, 147, 147, 255 },{ 239, 228, 228, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 237, 239, 237, 255 },{ 155, 205, 154, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 75, 174, 73, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 237, 177, 177, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 238, 209, 209, 255 },{ 238, 239, 239, 255 },{ 170, 209, 230, 255 },{ 46, 151, 210, 255 },{ 46, 151, 210, 255 },{ 171, 209, 230, 255 },{ 238, 239, 239, 255 },{ 210, 228, 209, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 184, 218, 184, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 235, 99, 99, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 235, 137, 137, 255 },{ 238, 239, 239, 255 },{ 71, 164, 215, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 72, 164, 215, 255 },{ 238, 239, 239, 255 },{ 150, 203, 149, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 112, 188, 110, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 234, 72, 72, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 239, 216, 216, 255 },{ 170, 209, 230, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 172, 210, 230, 255 },{ 226, 234, 226, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 73, 173, 71, 255 },{ 102, 184, 101, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 233, 59, 59, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 239, 236, 236, 255 },{ 46, 152, 211, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 47, 152, 210, 255 },{ 240, 240, 240, 255 },{ 83, 176, 81, 255 },{ 73, 173, 71, 255 },{ 88, 179, 87, 255 },{ 199, 223, 198, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 234, 61, 61, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 240, 240, 240, 255 },{ 46, 153, 210, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 47, 152, 210, 255 },{ 240, 240, 240, 255 },{ 80, 175, 78, 255 },{ 172, 212, 170, 255 },{ 238, 239, 238, 255 },{ 240, 240, 240, 255 },{ 248, 219, 133, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 234, 72, 72, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 240, 240, 240, 255 },{ 171, 209, 230, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 172, 209, 229, 255 },{ 236, 238, 236, 255 },{ 237, 239, 237, 255 },{ 240, 240, 239, 255 },{ 243, 227, 180, 255 },{ 253, 208, 75, 255 },{ 252, 211, 88, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 234, 99, 99, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 240, 240, 240, 255 },{ 238, 239, 239, 255 },{ 71, 164, 214, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 23, 142, 208, 255 },{ 72, 165, 215, 255 },{ 238, 239, 239, 255 },{ 240, 240, 240, 255 },{ 242, 232, 201, 255 },{ 251, 211, 91, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 250, 215, 111, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 238, 180, 180, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 240, 240, 240, 255 },{ 243, 231, 196, 255 },{ 238, 239, 239, 255 },{ 172, 210, 230, 255 },{ 46, 152, 210, 255 },{ 48, 152, 211, 255 },{ 172, 209, 229, 255 },{ 238, 239, 239, 255 },{ 240, 240, 240, 255 },{ 249, 213, 103, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 245, 228, 178, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 233, 58, 58, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 240, 240, 240, 255 },{ 253, 208, 74, 255 },{ 247, 219, 134, 255 },{ 241, 236, 220, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 241, 237, 227, 255 },{ 246, 223, 154, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 252, 208, 75, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 238, 201, 201, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 240, 240, 240, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 252, 209, 81, 255 },{ 252, 210, 83, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 243, 230, 194, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 235, 137, 137, 255 },{ 233, 56, 56, 255 },{ 233, 56, 56, 255 },{ 240, 240, 240, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 247, 220, 138, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 235, 143, 143, 255 },{ 233, 56, 56, 255 },{ 240, 240, 240, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 247, 220, 139, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 238, 210, 210, 255 },{ 240, 240, 240, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 74, 255 },{ 253, 208, 75, 255 },{ 243, 231, 199, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 0, 0, 0, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 243, 230, 190, 255 },{ 250, 216, 113, 255 },{ 252, 211, 89, 255 },{ 252, 208, 77, 255 },{ 252, 208, 77, 255 },{ 251, 210, 88, 255 },{ 251, 216, 111, 255 },{ 244, 228, 178, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 0, 0, 0, 255 },{ 0, 0, 0, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 0, 0, 0, 255 },{ 0, 0, 0, 255 },{ 0, 0, 0, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 240, 240, 240, 255 },{ 0, 0, 0, 255 },{ 0, 0, 0, 255 },{ 0, 0, 0, 255 },{ 0, 0, 0, 255 },{ 160, 160, 160, 255 },
			{ 255, 255, 255, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },{ 160, 160, 160, 255 },
		};

		CPackageMultiButton::CPackageMultiButton(IPackage *package) : CPackageControl(package, L"standard"), m_cIcon{ IconWidth, IconHeight, IconData }
		{
			// Supported platforms

			// Header files
			AddHeaderFile(L"Standard/Controls/MultiButton/MultiButton.h");

			// Forward declarations
			AddForwardDeclaration(L"class IListItemMultiButton;", L"Standard/ListItems/IListItemMultiButton.h", L"standard");
		}

		IControl *CPackageMultiButton::Create(IPropertyList **properties, IEventList **events)
		{
			IControl *result{ new CMultiButton() };
			if (properties)
				*properties = new CMultiButtonPropertyList(getPackage(), result, this);
			if (events)
				*events = new CMultiButtonEventList(getPackage(), result, this);
			if (properties || events)
				getPackage()->QueryService()->NotifyOnCreateControl(result, this, *properties, *events);
			return result;
		}

		IPropertyList *CPackageMultiButton::CreatePropertyList(IControl *control)
		{
			if (isInstance(control))
				return new CMultiButtonPropertyList(getPackage(), control, this);
			return nullptr;
		}

		IEventList *CPackageMultiButton::CreateEventList(IControl *control)
		{
			if (isInstance(control))
				return new CMultiButtonEventList(getPackage(), control, this);
			return nullptr;
		}

		String CPackageMultiButton::getCategory()
		{
			return L"Additional";
		}

		String CPackageMultiButton::getClassName()
		{
			return L"MultiButton";
		}

		String CPackageMultiButton::getTitle()
		{
			return L"MultiButton";
		}

		String CPackageMultiButton::getDescription()
		{
			return L"MultiButton";
		}

		String CPackageMultiButton::getReferenceUrl()
		{
			return L"";
		}

		const Image *CPackageMultiButton::getIcon()
		{
			return &m_cIcon;
		}

		bool CPackageMultiButton::isVisible()
		{
			return true;
		}

		bool CPackageMultiButton::isDisplayIcon()
		{
			return false;
		}

		bool CPackageMultiButton::isInstance(IControl *control)
		{
			return cast<CMultiButton*>(control) != nullptr;
		}

		bool CPackageMultiButton::CreateListItem(IComponent *component, IListItem *parent, IListItem **item, IPackageControlListener *listener)
		{
			if (component && (item || listener))
			{
				IMultiButton *control{ cast<IMultiButton*>(component) };
				if (control)
				{
					IListItem *i{ new CListItemMultiButton(L"Button " + ToString(control->getItemCount())) };
					if (item)
						*item = i;
					control->AddItem(i);
					if (listener)
						listener->OnCreateListItem(this, parent, i);
					return true;
				}
			}
			return false;
		}

		bool CPackageMultiButton::isTransformable()
		{
			return true;
		}

		void CPackageMultiButton::Save(Variant &dest, IPropertyList *properties, IEventList *events)
		{
			CPackageControl::Save(dest, properties, events);
			CMultiButton *control{ cast<CMultiButton*>(properties->getParent()) };
			if (Application->Editor && control)
				for (int i = 0; i < control->getItemCount(); i++)
				{
					IListItem *item{ control->getItem(i) };
					IPackageListItem *package_item{ Application->Editor->getListItem(item) };
					Variant data;
					if (package_item)
					{
						data[L"Package"] = package_item->getPackage()->getName();
						data[L"ClassName"] = package_item->getClassName();
						IPropertyList *properties;
						IListItem *test{ package_item->Create(&properties) };
						properties->setParent(item, this);
						test->Release();
						properties->Save(data);
						properties->Release();
					}
					dest[L"Items"].push_back(data);
				}
		}

		void CPackageMultiButton::Load(const Variant &src, IPropertyList *properties, IEventList *events)
		{
			CMultiButton *control{ cast<CMultiButton*>(properties->getParent()) };
			if (Application->Editor && control && src.isSet(L"Items") && src.get(L"Items").getType() == Variant::VariantType::Array)
			{
				control->DeleteItems();
				for (auto pos : src.get(L"Items"))
					if (pos.second.isSet(L"Package") && pos.second.isSet(L"ClassName"))
					{
						IPackageListItem *package_item{ Application->Editor->getListItem((String)pos.second.get(L"Package"), (String)pos.second.get(L"ClassName")) };
						if (package_item)
						{
							IPropertyList *properties;
							IListItem *item{ package_item->Create(&properties) };
							properties->Load(pos.second);
							properties->Release();
							if (!control->AddItem(item))
								item->Release();
						}
					}
			}
			CPackageControl::Load(src, properties, events);
		}

		void CPackageMultiButton::Export(std::wofstream &f, const String &shift, const String &owner, IPropertyList *properties, IEventList *events, const String &form, const String &dialog_box)
		{
			CMultiButton *control{ cast<CMultiButton*>(properties->getParent()) };
			if (Application->Editor && control)
				for (int i = 0; i < control->getItemCount(); i++)
				{
					IListItem *item{ control->getItem(i) };
					IPackageListItem *package_item{ Application->Editor->getListItem(item) };
					if (package_item)
					{
						IPropertyList *properties;
						IListItem *tmp{ package_item->Create(&properties) };
						properties->setParent(item, this);
						tmp->Release();
						String ns{ package_item->getNamespace() };
						if (!ns.empty())
							ns += L"::";
						f << shift << L"{" << std::endl;
						f << shift << L"\t" << ns << L"C" << item->ClassName << L" *item{ new " << ns << L"C" << item->ClassName << L"() };" << std::endl;
						properties->Export(f, shift + L"\t", L"item");
						f << shift << L"\t" << owner << L"->AddItem(item);" << std::endl;
						f << shift << L"}" << std::endl;
						properties->Release();
					}
				}
			CPackageControl::Export(f, shift, owner, properties, events, form, dialog_box);
		}
	}
}